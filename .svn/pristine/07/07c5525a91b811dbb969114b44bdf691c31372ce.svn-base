package com.sunjays.capl.service;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import com.sunjays.capl.entity.VehicleInfo;
import com.sunjays.capl.entity.VehicleRawData;
import com.sunjays.capl.entity.VehicleRawDataExample;
import com.sunjays.capl.entity.VehicleVo;

public interface VehicleRawDataService {

	 int countByExample(VehicleRawDataExample example);

	    int deleteByExample(VehicleRawDataExample example);

	    int deleteByPrimaryKey(Integer id);

	    int insert(VehicleRawData record);

	    int insertSelective(VehicleRawData record);

	    List<VehicleRawData> selectByExample(VehicleRawDataExample example);

	    VehicleRawData selectByPrimaryKey(Integer id);

	    int updateByExampleSelective(@Param("record") VehicleRawData record, @Param("example") VehicleRawDataExample example);

	    int updateByExample(@Param("record") VehicleRawData record, @Param("example") VehicleRawDataExample example);

	    int updateByPrimaryKeySelective(VehicleRawData record);

	    int updateByPrimaryKey(VehicleRawData record);
	    
	    //查询每个车最后一个坐标
	    List<VehicleRawData> selectByLastTime();
	    
	    //查询每个车最新坐标
	    List<VehicleRawData> selectAll(String time);
	    
	    //查询一辆车最新坐标
	    VehicleRawData selectByDevId(String DevId);
	    
	    //根据车牌号或SIM号模糊查询
	    VehicleRawData selectByVehicle(VehicleInfo vehicleInfo);
	    
	    //模糊查询最新坐标
	    List<VehicleRawData> selectByLike(VehicleInfo vehicleInfo);
	    
	    //模糊查询最后一个坐标
	    List<VehicleRawData> selectByLastLike(VehicleInfo vehicleInfo);
	    
	    //根据设备码和时间查询
	    List<VehicleRawData> selectByVo(VehicleVo vo);
	    
	    //根据车牌号查询最新坐标
	    VehicleRawData selectByVeh(VehicleInfo vehicleInfo);
	    
	    //根据车牌号查询最后一个坐标
	    VehicleRawData selectByLastVeh(String veh);
	    
	    //查询没有状态的车辆
	    List<VehicleRawData> selectByRemark();
	    
	    //给状态赋值
	    void updateRemark(VehicleRawData veh);
	    
	    //查询需要报表统计的数据
	    List<VehicleRawData> selectByFlag(String vehicle);
	    
	    //已经统计
	    void updateFlag(Integer id);
	   
	
}
